name: ReVanced Builder

on:
  schedule:
    - cron: '0 0 * * *' # Daily build
  workflow_dispatch:
    inputs:
      force:
        description: 'Force rebuild'
        type: boolean
        required: false
        default: false

env:
  CONFIG_DIR: configs
  DOWNLOAD_DIR: downloads
  DIST_DIR: dist

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.list-apps.outputs.matrix }}
      choices: ${{ steps.list-apps.outputs.choices }}
    steps:
      - uses: actions/checkout@v3
      - id: list-apps
        uses: ./.github/actions/list-apps

  build:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJson(needs.prepare.outputs.matrix) }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Check if app should be built
      id: should-build
      run: |
        if [[ "${{ github.event_name }}" == "schedule" ]]; then
          echo "build=true" >> $GITHUB_OUTPUT
        else
          echo "build=${{ inputs[format('build_{0}', matrix.app)] }}" >> $GITHUB_OUTPUT
        fi

    - name: Set up JDK 17
      if: steps.should-build.outputs.build == 'true'
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ${{ env.DOWNLOAD_DIR }}
          ${{ env.DIST_DIR }}
        key: ${{ runner.os }}-apks-${{ hashFiles('configs/*.yaml') }}
        
    - name: Download APKs
      run: |
        pip install pyyaml
        python scripts/downloader.py
        
    - name: Merge split APKs
      run: |
        wget https://github.com/REAndroid/APKEditor/releases/latest/download/APKEditor.jar
        python scripts/merger.py
        
    - name: Apply ReVanced patches
      if: steps.should-build.outputs.build == 'true'
      run: |
        mkdir -p ${{ env.DIST_DIR }}
        wget -q https://github.com/anddea/revanced-patches/releases/latest/download/patches.rvp
        wget -q https://github.com/inotia00/revanced-cli/releases/latest/download/revanced-cli-all.jar
        
        if [ -f "versions.lock" ]; then
          versions=$(python -c "import yaml;print(yaml.safe_load(open('versions.lock'))['${{ matrix.app }}']['apk_version'])")
          app_version=$(echo $versions | cut -d' ' -f1)
          patch_version=$(echo $versions | cut -d' ' -f2)
          
          python scripts/patcher.py --app ${{ matrix.app }} --version $app_version --patch-version $patch_version
        fi
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: patched-apks
        path: ${{ env.DIST_DIR }}/*.apk
        
    - name: Create release
      uses: softprops/action-gh-release@v1
      if: success()
      with:
        files: ${{ env.DIST_DIR }}/*.apk
        tag_name: patched-${{ github.run_id }}
        generate_release_notes: true

    - name: Load build rules
      id: build-rules
      run: |
        retention_days=$(python -c "import yaml; print(yaml.safe_load(open('configs/build_rules.yaml'))['global']['retention_days'])")
        echo "retention_days=$retention_days" >> $GITHUB_OUTPUT

    - name: Cleanup old artifacts
      uses: c-hive/gha-remove-artifacts@v1
      with:
        age: ${{ steps.build-rules.outputs.retention_days }} days
        skip: latest

    - name: Check for updates
      id: version-check
      run: |
        python scripts/version_check.py
        updates=$(jq -r '. | length' versions.json)
        echo "updates_found=$updates" >> $GITHUB_OUTPUT

    - name: Build components
      if: steps.version-check.outputs.updates_found > 0 || inputs.force == 'true'
      run: |
        # Existing build steps